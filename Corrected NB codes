
#Libary import
import pandas as pd
from pandas.api.types import CategoricalDtype
from matplotlib import colors
from wordcloud import WordCloud
import matplotlib.pyplot as plt 
from sklearn.feature_extraction.text import TfidfVectorizer
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score
from sklearn.metrics import confusion_matrix

#Importing Dataset &understanding the data
url = "https://raw.githubusercontent.com/HAN-M3DM-Data-Mining/data-mining-s2y2223-Mzakhimi/master/datasets/NB-fakenews.csv"
RawDF = pd.read_csv(url)
RawDF.head()
newDF = RawDF.copy()

# Creating a categorical data type for the 'label' column in the 'fake_news' dataset.

catType = CategoricalDtype(categories=["0", "1"], ordered=False)
Realnews = ' '.join([str(Text) for Text in newDF[RawDF['label']== 0 ]['text'].astype(str)])
Fakenews = ' '.join([str(Text) for Text in newDF[RawDF['label']== 1 ]['text'].astype(str)])

# Creating a wordcloud

colorListreal=['#e9f6fb','#92d2ed','#2195c5']
colorListfake=['#f9ebeb','#d57676','#b03636']
colormapreal= colors.ListedColormap(colorListreal)
colormapfake= colors.ListedColormap(colorListfake)
wordcloudreal = WordCloud(background_color='white').generate(Realnews)
wordcloudfake = WordCloud(background_color='white').generate(Fakenews)

fig, (wc1, wc2) = plt.subplots(1, 2)
fig.suptitle('Wordclouds for realnews and fakenews')
wc1.imshow(wordcloudreal)
wc2.imshow(wordcloudfake)
plt.show()

newDF1 = newDF.fillna(value='Missing')

# Vectors

vectorizer = TfidfVectorizer(max_features=1000)
vectors = vectorizer.fit_transform(newDF1.text)
wordsDF = pd.DataFrame(vectors.toarray(), columns=vectorizer.get_feature_names_out())
wordsDF.head()

# Data modeling & Testing the data

xTrain, xTest, yTrain, yTest = train_test_split(wordsDF, newDF1.label)

bayes = MultinomialNB()
bayes.fit(xTrain, yTrain)

yPred = bayes.predict(xTest)
yTrue = yTest
accuracyScore = accuracy_score(yTrue, yPred)
print(f'Accuracy: {accuracyScore}')

matrix = confusion_matrix(yTrue, yPred)
labelNames = pd.Series(['realnews', 'fakenews'])
pd.DataFrame(matrix,
     columns='Predicted ' + labelNames,
     index='Is ' + labelNames)


#########problems with the sabotaged version:
 # Missing Package : from wordcloud import WordCloud 
 # there was a problem with row 25 in the sabotaged version.
 # There was a problem with row 12 in the sabotaged version
 # Missing package : from sklearn.metrics import accuracy_score
   
